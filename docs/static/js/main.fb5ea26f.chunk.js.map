{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAMC,iBACFJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAMQ,OAAOF,Y,uBCPtBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAClDH,GAFe,+DAIII,MAAMF,GAJV,cAIbG,EAJa,gBAKIA,EAASC,OALb,uBAKXC,EALW,EAKXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KActC,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAACX,GAAD,OACnBS,EAAS,CACLf,KAAMM,EACNO,SAAS,SAGlB,CAACpB,IAEGqB,EDZ2BI,CAAazB,GAAjCa,EADuB,EAC7BN,KAAca,EADe,EACfA,QAEtB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GACG,uBAAGJ,UAAU,oCAAb,cAEJ,yBAAKA,UAAU,aACVH,EAAOJ,KAAI,SAACiB,GAAD,OACR,kBAAC,EAAD,eAAaC,IAAKD,EAAMf,IAAQe,UEXvCE,EAAe,WAAO,IAAD,EACM1C,mBAAS,CAAC,gBADhB,mBACvBQ,EADuB,KACXT,EADW,KAG9B,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACKS,EAAWe,KAAI,SAACT,GAAD,OACZ,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,U,MCPtD6B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.fb5ea26f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories((categories) => [inputValue, ...categories]);\n            setInputValue('');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n        category\n    )}&limit=10&api_key=OQbzkjZ2NWdu8Zg86aWGJkWeoERzxKK3`;\n    const response = await fetch(url);\n    const { data } = await response.json();\n    const gifs = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        };\n    });\n    return gifs;\n};\n","import React from 'react';\n\nexport const GifGridItem = ({ title, url }) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    );\n};\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && (\n                <p className=\"animate__animated animate__flash\">Loading...</p>\n            )}\n            <div className=\"card-grid\">\n                {images.map((image) => (\n                    <GifGridItem key={image.id} {...image} />\n                ))}\n            </div>\n        </>\n    );\n};\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n    useEffect(() => {\n        getGifs(category).then((images) =>\n            setState({\n                data: images,\n                loading: false,\n            })\n        );\n    }, [category]);\n\n    return state;\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState(['Dragon Ball']);\n\n    return (\n        <>\n            <h2>Gif Expert App</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ol>\n                {categories.map((category) => (\n                    <GifGrid key={category} category={category} />\n                ))}\n            </ol>\n        </>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}